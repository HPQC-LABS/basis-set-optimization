#INFO: **** input file is /Users/vtan/basis-set-optimization/018_Ar/input.py ****
#!/usr/bin/env python

import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ar  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ar 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ar': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ar 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ar': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exps = np.zeros((12, 2))
#exps[:, 0] = decaying_nums(5)
exps_old = np.array([2.9367945083858178e+05,7.3419865393677101e+04,1.8353927627435987e+04,2.2341424145819028e+03,4.5688904996449571e+02,1.2173317272260677e+02,3.7593061247508530e+01,4.7412722556720146e+00,3.9120358491841306e-01,8.5986297237246045e+00,4.9084868336327880e-01])
exps[1:, 0] = exps_old[:]
exps[0, 0] = np.max(exps_old) * 4.0

basis = "10s2p"

minimize_energy(basis, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Vinnas-Air', release='19.6.0', version='Darwin Kernel Version 19.6.0: Tue Jun 21 21:18:39 PDT 2022; root:xnu-6153.141.66~1/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.8 (default, Apr 13 2021, 12:59:45) 
[Clang 10.0.0 ]
numpy 1.24.2  scipy 1.10.1
Date: Sun Mar 12 00:06:26 2023
PySCF version 2.1.1
PySCF path  /Users/vtan/ve_pyscfad/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/c6/fyjd84g92vqcf03tnvqp486c0000gn/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/vtan/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 18
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ar     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ar
[INPUT] 0    0    [1    /1   ]  1174717.80335        1
[INPUT] 0    0    [1    /1   ]  293679.450839        1
[INPUT] 0    0    [1    /1   ]  73419.8653937        1
[INPUT] 0    0    [1    /1   ]  18353.9276274        1
[INPUT] 0    0    [1    /1   ]  2234.14241458        1
[INPUT] 0    0    [1    /1   ]  456.889049964        1
[INPUT] 0    0    [1    /1   ]  121.733172723        1
[INPUT] 0    0    [1    /1   ]  37.5930612475        1
[INPUT] 0    0    [1    /1   ]  4.74127225567        1
[INPUT] 0    0    [1    /1   ]  0.391203584918       1
[INPUT] 1    0    [1    /1   ]  8.59862972372        1
[INPUT] 1    0    [1    /1   ]  0.490848683363       1

nuclear repulsion = 0
number of shells = 12
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ar': [[0, [1174717.803354327, 1.0]], [0, [293679.4508385818, 1.0]], [0, [73419.8653936771, 1.0]], [0, [18353.927627435987, 1.0]], [0, [2234.142414581903, 1.0]], [0, [456.8890499644957, 1.0]], [0, [121.73317272260677, 1.0]], [0, [37.59306124750853, 1.0]], [0, [4.741272255672015, 1.0]], [0, [0.39120358491841306, 1.0]], [1, [8.598629723724605, 1.0]], [1, [0.4908486833632788, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1174717.80335433]
bas 1, expnt(s) = [293679.45083858]
bas 2, expnt(s) = [73419.86539368]
bas 3, expnt(s) = [18353.92762744]
bas 4, expnt(s) = [2234.14241458]
bas 5, expnt(s) = [456.88904996]
bas 6, expnt(s) = [121.73317272]
bas 7, expnt(s) = [37.59306125]
bas 8, expnt(s) = [4.74127226]
bas 9, expnt(s) = [0.39120358]
bas 10, expnt(s) = [8.59862972]
bas 11, expnt(s) = [0.49084868]
CPU time:         1.35
arg.atm = [[18 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  0  1  1  0 38 39  0]
 [ 0  0  1  1  0 40 41  0]
 [ 0  0  1  1  0 42 43  0]
 [ 0  1  1  1  0 44 45  0]
 [ 0  1  1  1  0 46 47  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.17471780e+06 9.01498871e+04 2.93679451e+05 3.18727983e+04
 7.34198654e+04 1.12687362e+04 1.83539276e+04 3.98393079e+03
 2.23414241e+03 8.21009466e+02 4.56889050e+02 2.49673866e+02
 1.21733173e+02 9.25916301e+01 3.75930612e+01 3.83571025e+01
 4.74127226e+00 8.11775977e+00 3.91203585e-01 1.24973273e+00
 8.59862972e+00 4.29557150e+01 4.90848683e-01 1.19858525e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 17.319975421925534
cond(S) = 47.554968620869516
E1 = -688.8635364311068  E_coul = 184.91537437006536
init E= -503.948162061041
    CPU time for initialize scf      0.16 sec, wall time      0.17 sec
  HOMO = -0.680897826633315  LUMO = 85.0613469972594
  mo_energy =
[-1.21650419e+02 -1.32811370e+01 -7.62160369e+00 -7.62160369e+00
 -7.62160369e+00 -1.65070574e+00 -6.80897827e-01 -6.80897827e-01
 -6.80897827e-01  8.50613470e+01  6.77230829e+02  3.93506793e+03
  2.96304880e+04  1.54998273e+05  6.71328829e+05  2.87588581e+06]
E1 = -706.5847622456928  E_coul = 198.94563665624483
cycle= 1 E= -507.639125589448  delta_E= -3.69  |g|= 0.317  |ddm|= 0.301
    CPU time for cycle= 1      0.35 sec, wall time      0.36 sec
diis-norm(errvec)=0.41999
diis-c [-0.17639193  1.        ]
  HOMO = -0.236276577134279  LUMO = 86.3943760240236
  mo_energy =
[-1.20262402e+02 -1.22530375e+01 -6.65306745e+00 -6.65306745e+00
 -6.65306745e+00 -1.16348408e+00 -2.36276577e-01 -2.36276577e-01
 -2.36276577e-01  8.63943760e+01  6.78601441e+02  3.93631958e+03
  2.96315768e+04  1.54999291e+05  6.71329817e+05  2.87588678e+06]
E1 = -706.5533310889462  E_coul = 198.91377760853445
cycle= 2 E= -507.639553480412  delta_E= -0.000428  |g|= 0.00474  |ddm|= 0.0143
    CPU time for cycle= 2      0.12 sec, wall time      0.12 sec
diis-norm(errvec)=0.00504165
diis-c [-2.53728079e-05 -5.07974303e-04  1.00050797e+00]
  HOMO = -0.236451777119845  LUMO = 86.3908578627834
  mo_energy =
[-1.20271041e+02 -1.22542261e+01 -6.65490837e+00 -6.65490837e+00
 -6.65490837e+00 -1.16354884e+00 -2.36451777e-01 -2.36451777e-01
 -2.36451777e-01  8.63908579e+01  6.78590857e+02  3.93630369e+03
  2.96315576e+04  1.54999271e+05  6.71329796e+05  2.87588676e+06]
E1 = -706.5528909045559  E_coul = 198.91333731406803
cycle= 3 E= -507.639553590488  delta_E= -1.1e-07  |g|= 9.48e-05  |ddm|= 0.000202
    CPU time for cycle= 3      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=0.000126761
diis-c [-3.95437208e-10  3.34845172e-05 -2.54616199e-02  1.02542814e+00]
  HOMO = -0.236453988523006  LUMO = 86.3908132127143
  mo_energy =
[-1.20271154e+02 -1.22542419e+01 -6.65493532e+00 -6.65493532e+00
 -6.65493532e+00 -1.16354950e+00 -2.36453989e-01 -2.36453989e-01
 -2.36453989e-01  8.63908132e+01  6.78590740e+02  3.93630355e+03
  2.96315574e+04  1.54999271e+05  6.71329796e+05  2.87588676e+06]
E1 = -706.5528836678028  E_coul = 198.91333007727457
cycle= 4 E= -507.639553590528  delta_E= -4.04e-11  |g|= 3.73e-07  |ddm|= 3.44e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.02 sec
E1 = -706.5528836678028  E_coul = 198.91333007727457
  HOMO = -0.236453972231694  LUMO = 86.3908135505419
  mo_energy =
[-1.20271153e+02 -1.22542418e+01 -6.65493516e+00 -6.65493516e+00
 -6.65493516e+00 -1.16354949e+00 -2.36453972e-01 -2.36453972e-01
 -2.36453972e-01  8.63908136e+01  6.78590741e+02  3.93630355e+03
  2.96315574e+04  1.54999271e+05  6.71329796e+05  2.87588676e+06]
E1 = -706.5528837047763  E_coul = 198.91333011424808
Extra cycle  E= -507.639553590528  delta_E= 5.68e-14  |g|= 6.44e-09  |ddm|= 1.64e-08
    CPU time for scf_cycle      0.68 sec, wall time      0.69 sec
exp = [1.17471780e+06 2.93679451e+05 7.34198654e+04 1.83539276e+04
 2.23414241e+03 4.56889050e+02 1.21733173e+02 3.75930612e+01
 4.74127226e+00 3.91203585e-01 8.59862972e+00 4.90848683e-01]
E = -507.6395535905282
#INFO: **** input file is /Users/vtan/basis-set-optimization/018_Ar/input.py ****
#!/usr/bin/env python

import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ar  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ar 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ar': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ar 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ar': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exps = np.zeros((12, 2))
#exps[:, 0] = decaying_nums(5)
exps_old = np.array([2.9367945083858178e+05,7.3419865393677101e+04,1.8353927627435987e+04,2.2341424145819028e+03,4.5688904996449571e+02,1.2173317272260677e+02,3.7593061247508530e+01,4.7412722556720146e+00,3.9120358491841306e-01,8.5986297237246045e+00,4.9084868336327880e-01])
exps[1:, 0] = exps_old[:]
exps[0, 0] = np.max(exps_old) * 4.0

basis = "10s2p"

minimize_energy(basis, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Vinnas-Air', release='19.6.0', version='Darwin Kernel Version 19.6.0: Tue Jun 21 21:18:39 PDT 2022; root:xnu-6153.141.66~1/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.8 (default, Apr 13 2021, 12:59:45) 
[Clang 10.0.0 ]
numpy 1.24.2  scipy 1.10.1
Date: Sun Mar 12 00:06:27 2023
PySCF version 2.1.1
PySCF path  /Users/vtan/ve_pyscfad/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/c6/fyjd84g92vqcf03tnvqp486c0000gn/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/vtan/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 18
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ar     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ar
[INPUT] 0    0    [1    /1   ]  1174717.80335        1
[INPUT] 0    0    [1    /1   ]  293679.450839        1
[INPUT] 0    0    [1    /1   ]  73419.8653937        1
[INPUT] 0    0    [1    /1   ]  18353.9276274        1
[INPUT] 0    0    [1    /1   ]  2234.14241458        1
[INPUT] 0    0    [1    /1   ]  456.889049964        1
[INPUT] 0    0    [1    /1   ]  121.733172723        1
[INPUT] 0    0    [1    /1   ]  37.5930612475        1
[INPUT] 0    0    [1    /1   ]  4.74127225567        1
[INPUT] 0    0    [1    /1   ]  0.391203584918       1
[INPUT] 1    0    [1    /1   ]  8.59862972372        1
[INPUT] 1    0    [1    /1   ]  0.490848683363       1

nuclear repulsion = 0
number of shells = 12
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ar': [[0, [1174717.803354327, 1.0]], [0, [293679.4508385818, 1.0]], [0, [73419.8653936771, 1.0]], [0, [18353.927627435987, 1.0]], [0, [2234.142414581903, 1.0]], [0, [456.8890499644957, 1.0]], [0, [121.73317272260677, 1.0]], [0, [37.59306124750853, 1.0]], [0, [4.741272255672015, 1.0]], [0, [0.39120358491841306, 1.0]], [1, [8.598629723724605, 1.0]], [1, [0.4908486833632788, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1174717.80335433]
bas 1, expnt(s) = [293679.45083858]
bas 2, expnt(s) = [73419.86539368]
bas 3, expnt(s) = [18353.92762744]
bas 4, expnt(s) = [2234.14241458]
bas 5, expnt(s) = [456.88904996]
bas 6, expnt(s) = [121.73317272]
bas 7, expnt(s) = [37.59306125]
bas 8, expnt(s) = [4.74127226]
bas 9, expnt(s) = [0.39120358]
bas 10, expnt(s) = [8.59862972]
bas 11, expnt(s) = [0.49084868]
CPU time:         2.27
arg.atm = [[18 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  0  1  1  0 38 39  0]
 [ 0  0  1  1  0 40 41  0]
 [ 0  0  1  1  0 42 43  0]
 [ 0  1  1  1  0 44 45  0]
 [ 0  1  1  1  0 46 47  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.17471780e+06 9.01498871e+04 2.93679451e+05 3.18727983e+04
 7.34198654e+04 1.12687362e+04 1.83539276e+04 3.98393079e+03
 2.23414241e+03 8.21009466e+02 4.56889050e+02 2.49673866e+02
 1.21733173e+02 9.25916301e+01 3.75930612e+01 3.83571025e+01
 4.74127226e+00 8.11775977e+00 3.91203585e-01 1.24973273e+00
 8.59862972e+00 4.29557150e+01 4.90848683e-01 1.19858525e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 17.319975421925534
cond(S) = 47.554968620869516
E1 = -688.8635364311068  E_coul = 184.91537437006536
init E= -503.948162061041
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.680897826633315  LUMO = 85.0613469972594
  mo_energy =
[-1.21650419e+02 -1.32811370e+01 -7.62160369e+00 -7.62160369e+00
 -7.62160369e+00 -1.65070574e+00 -6.80897827e-01 -6.80897827e-01
 -6.80897827e-01  8.50613470e+01  6.77230829e+02  3.93506793e+03
  2.96304880e+04  1.54998273e+05  6.71328829e+05  2.87588581e+06]
E1 = -706.5847622456928  E_coul = 198.94563665624483
cycle= 1 E= -507.639125589448  delta_E= -3.69  |g|= 0.317  |ddm|= 0.301
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.41999
diis-c [-0.17639193  1.        ]
  HOMO = -0.236276577134279  LUMO = 86.3943760240236
  mo_energy =
[-1.20262402e+02 -1.22530375e+01 -6.65306745e+00 -6.65306745e+00
 -6.65306745e+00 -1.16348408e+00 -2.36276577e-01 -2.36276577e-01
 -2.36276577e-01  8.63943760e+01  6.78601441e+02  3.93631958e+03
  2.96315768e+04  1.54999291e+05  6.71329817e+05  2.87588678e+06]
E1 = -706.5533310889462  E_coul = 198.91377760853445
cycle= 2 E= -507.639553480412  delta_E= -0.000428  |g|= 0.00474  |ddm|= 0.0143
    CPU time for cycle= 2      0.01 sec, wall time      0.02 sec
diis-norm(errvec)=0.00504165
diis-c [-2.53728079e-05 -5.07974303e-04  1.00050797e+00]
  HOMO = -0.236451777119845  LUMO = 86.3908578627834
  mo_energy =
[-1.20271041e+02 -1.22542261e+01 -6.65490837e+00 -6.65490837e+00
 -6.65490837e+00 -1.16354884e+00 -2.36451777e-01 -2.36451777e-01
 -2.36451777e-01  8.63908579e+01  6.78590857e+02  3.93630369e+03
  2.96315576e+04  1.54999271e+05  6.71329796e+05  2.87588676e+06]
E1 = -706.5528909045559  E_coul = 198.91333731406803
cycle= 3 E= -507.639553590488  delta_E= -1.1e-07  |g|= 9.48e-05  |ddm|= 0.000202
    CPU time for cycle= 3      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=0.000126761
diis-c [-3.95437208e-10  3.34845172e-05 -2.54616199e-02  1.02542814e+00]
  HOMO = -0.236453988523006  LUMO = 86.3908132127143
  mo_energy =
[-1.20271154e+02 -1.22542419e+01 -6.65493532e+00 -6.65493532e+00
 -6.65493532e+00 -1.16354950e+00 -2.36453989e-01 -2.36453989e-01
 -2.36453989e-01  8.63908132e+01  6.78590740e+02  3.93630355e+03
  2.96315574e+04  1.54999271e+05  6.71329796e+05  2.87588676e+06]
E1 = -706.5528836678028  E_coul = 198.91333007727457
cycle= 4 E= -507.639553590528  delta_E= -4.04e-11  |g|= 3.73e-07  |ddm|= 3.44e-06
    CPU time for cycle= 4      0.02 sec, wall time      0.02 sec
E1 = -706.5528836678028  E_coul = 198.91333007727457
  HOMO = -0.236453972231694  LUMO = 86.3908135505419
  mo_energy =
[-1.20271153e+02 -1.22542418e+01 -6.65493516e+00 -6.65493516e+00
 -6.65493516e+00 -1.16354949e+00 -2.36453972e-01 -2.36453972e-01
 -2.36453972e-01  8.63908136e+01  6.78590741e+02  3.93630355e+03
  2.96315574e+04  1.54999271e+05  6.71329796e+05  2.87588676e+06]
E1 = -706.5528837047763  E_coul = 198.91333011424808
Extra cycle  E= -507.639553590528  delta_E= 5.68e-14  |g|= 6.44e-09  |ddm|= 1.64e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.11 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 47.554968620869516
E1 = -706.5528837047763  E_coul = 198.91333011424808
init E= -507.639553590528
    CPU time for initialize scf      0.39 sec, wall time      0.39 sec
  HOMO = -0.236453972041175  LUMO = 86.3908135546673
  mo_energy =
[-1.20271153e+02 -1.22542418e+01 -6.65493516e+00 -6.65493516e+00
 -6.65493516e+00 -1.16354949e+00 -2.36453972e-01 -2.36453972e-01
 -2.36453972e-01  8.63908136e+01  6.78590741e+02  3.93630355e+03
  2.96315574e+04  1.54999271e+05  6.71329796e+05  2.87588676e+06]
E1 = -706.5528837053364  E_coul = 198.91333011480765
cycle= 1 E= -507.639553590529  delta_E= -5.68e-13  |g|= 1.32e-10  |ddm|= 2.54e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -706.5528837053364  E_coul = 198.91333011480765
  HOMO = -0.236453972038485  LUMO = 86.3908135547293
  mo_energy =
[-1.20271153e+02 -1.22542418e+01 -6.65493516e+00 -6.65493516e+00
 -6.65493516e+00 -1.16354949e+00 -2.36453972e-01 -2.36453972e-01
 -2.36453972e-01  8.63908136e+01  6.78590741e+02  3.93630355e+03
  2.96315574e+04  1.54999271e+05  6.71329796e+05  2.87588676e+06]
E1 = -706.552883705345  E_coul = 198.913330114817
Extra cycle  E= -507.639553590528  delta_E= 6.82e-13  |g|= 2.39e-11  |ddm|= 4.45e-12
    CPU time for scf_cycle      1.35 sec, wall time      1.35 sec
exp = [1.17471780e+06 2.93679451e+05 7.34198654e+04 1.83539276e+04
 2.23414241e+03 4.56889050e+02 1.21733173e+02 3.75930612e+01
 4.74127226e+00 3.91203585e-01 8.59862972e+00 4.90848683e-01]
grad_E = [-2.03188014e-10  1.11768769e-08 -3.70634501e-08  6.44421044e-06
 -9.95150437e-06  4.73283019e-06 -1.21866029e-06  3.49045566e-06
  1.43702067e-07 -1.92539869e-06  5.77607176e-06  4.23662300e-07]
 message: Optimization terminated successfully
 success: True
  status: 0
     fun: -507.6395535905282
       x: [ 1.175e+06  2.937e+05  7.342e+04  1.835e+04  2.234e+03
            4.569e+02  1.217e+02  3.759e+01  4.741e+00  3.912e-01
            8.599e+00  4.908e-01]
     nit: 1
     jac: [-2.032e-10  1.118e-08 -3.706e-08  6.444e-06 -9.952e-06
            4.733e-06 -1.219e-06  3.490e-06  1.437e-07 -1.925e-06
            5.776e-06  4.237e-07]
    nfev: 1
    njev: 1
#INFO: **** input file is /Users/vtan/basis-set-optimization/018_Ar/input.py ****
#!/usr/bin/env python

import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ar  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ar 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ar': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ar 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ar': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exps = np.zeros((12, 2))
#exps[:, 0] = decaying_nums(5)
exps_old = np.array([2.9367945083858178e+05,7.3419865393677101e+04,1.8353927627435987e+04,2.2341424145819028e+03,4.5688904996449571e+02,1.2173317272260677e+02,3.7593061247508530e+01,4.7412722556720146e+00,3.9120358491841306e-01,8.5986297237246045e+00,4.9084868336327880e-01])
exps[1:, 0] = exps_old[:]
exps[0, 0] = np.max(exps_old) * 4.0

basis = "10s2p"

minimize_energy(basis, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Vinnas-Air', release='19.6.0', version='Darwin Kernel Version 19.6.0: Tue Jun 21 21:18:39 PDT 2022; root:xnu-6153.141.66~1/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.8 (default, Apr 13 2021, 12:59:45) 
[Clang 10.0.0 ]
numpy 1.24.2  scipy 1.10.1
Date: Sun Mar 12 00:06:34 2023
PySCF version 2.1.1
PySCF path  /Users/vtan/ve_pyscfad/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/c6/fyjd84g92vqcf03tnvqp486c0000gn/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/vtan/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 18
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ar     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ar
[INPUT] 0    0    [1    /1   ]  1174717.80335        1
[INPUT] 0    0    [1    /1   ]  293679.450839        1
[INPUT] 0    0    [1    /1   ]  73419.8653937        1
[INPUT] 0    0    [1    /1   ]  18353.9276274        1
[INPUT] 0    0    [1    /1   ]  2234.14241458        1
[INPUT] 0    0    [1    /1   ]  456.889049964        1
[INPUT] 0    0    [1    /1   ]  121.733172723        1
[INPUT] 0    0    [1    /1   ]  37.5930612475        1
[INPUT] 0    0    [1    /1   ]  4.74127225567        1
[INPUT] 0    0    [1    /1   ]  0.391203584918       1
[INPUT] 1    0    [1    /1   ]  8.59862972372        1
[INPUT] 1    0    [1    /1   ]  0.490848683363       1

nuclear repulsion = 0
number of shells = 12
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ar': [[0, [1174717.803354327, 1.0]], [0, [293679.4508385818, 1.0]], [0, [73419.8653936771, 1.0]], [0, [18353.927627435987, 1.0]], [0, [2234.142414581903, 1.0]], [0, [456.8890499644957, 1.0]], [0, [121.73317272260677, 1.0]], [0, [37.59306124750853, 1.0]], [0, [4.741272255672015, 1.0]], [0, [0.39120358491841306, 1.0]], [1, [8.598629723724605, 1.0]], [1, [0.4908486833632788, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1174717.80335433]
bas 1, expnt(s) = [293679.45083858]
bas 2, expnt(s) = [73419.86539368]
bas 3, expnt(s) = [18353.92762744]
bas 4, expnt(s) = [2234.14241458]
bas 5, expnt(s) = [456.88904996]
bas 6, expnt(s) = [121.73317272]
bas 7, expnt(s) = [37.59306125]
bas 8, expnt(s) = [4.74127226]
bas 9, expnt(s) = [0.39120358]
bas 10, expnt(s) = [8.59862972]
bas 11, expnt(s) = [0.49084868]
CPU time:         8.79
arg.atm = [[18 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  0  1  1  0 38 39  0]
 [ 0  0  1  1  0 40 41  0]
 [ 0  0  1  1  0 42 43  0]
 [ 0  1  1  1  0 44 45  0]
 [ 0  1  1  1  0 46 47  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.17471780e+06 9.01498871e+04 2.93679451e+05 3.18727983e+04
 7.34198654e+04 1.12687362e+04 1.83539276e+04 3.98393079e+03
 2.23414241e+03 8.21009466e+02 4.56889050e+02 2.49673866e+02
 1.21733173e+02 9.25916301e+01 3.75930612e+01 3.83571025e+01
 4.74127226e+00 8.11775977e+00 3.91203585e-01 1.24973273e+00
 8.59862972e+00 4.29557150e+01 4.90848683e-01 1.19858525e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 17.319975421925534
cond(S) = 47.554968620869516
E1 = -688.8635364311068  E_coul = 184.91537437006536
init E= -503.948162061041
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.680897826633315  LUMO = 85.0613469972594
  mo_energy =
[-1.21650419e+02 -1.32811370e+01 -7.62160369e+00 -7.62160369e+00
 -7.62160369e+00 -1.65070574e+00 -6.80897827e-01 -6.80897827e-01
 -6.80897827e-01  8.50613470e+01  6.77230829e+02  3.93506793e+03
  2.96304880e+04  1.54998273e+05  6.71328829e+05  2.87588581e+06]
E1 = -706.5847622456928  E_coul = 198.94563665624483
cycle= 1 E= -507.639125589448  delta_E= -3.69  |g|= 0.317  |ddm|= 0.301
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.41999
diis-c [-0.17639193  1.        ]
  HOMO = -0.236276577134279  LUMO = 86.3943760240236
  mo_energy =
[-1.20262402e+02 -1.22530375e+01 -6.65306745e+00 -6.65306745e+00
 -6.65306745e+00 -1.16348408e+00 -2.36276577e-01 -2.36276577e-01
 -2.36276577e-01  8.63943760e+01  6.78601441e+02  3.93631958e+03
  2.96315768e+04  1.54999291e+05  6.71329817e+05  2.87588678e+06]
E1 = -706.5533310889462  E_coul = 198.91377760853445
cycle= 2 E= -507.639553480412  delta_E= -0.000428  |g|= 0.00474  |ddm|= 0.0143
    CPU time for cycle= 2      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=0.00504165
diis-c [-2.53728079e-05 -5.07974303e-04  1.00050797e+00]
  HOMO = -0.236451777119845  LUMO = 86.3908578627834
  mo_energy =
[-1.20271041e+02 -1.22542261e+01 -6.65490837e+00 -6.65490837e+00
 -6.65490837e+00 -1.16354884e+00 -2.36451777e-01 -2.36451777e-01
 -2.36451777e-01  8.63908579e+01  6.78590857e+02  3.93630369e+03
  2.96315576e+04  1.54999271e+05  6.71329796e+05  2.87588676e+06]
E1 = -706.5528909045559  E_coul = 198.91333731406803
cycle= 3 E= -507.639553590488  delta_E= -1.1e-07  |g|= 9.48e-05  |ddm|= 0.000202
    CPU time for cycle= 3      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=0.000126761
diis-c [-3.95437208e-10  3.34845172e-05 -2.54616199e-02  1.02542814e+00]
  HOMO = -0.236453988523006  LUMO = 86.3908132127143
  mo_energy =
[-1.20271154e+02 -1.22542419e+01 -6.65493532e+00 -6.65493532e+00
 -6.65493532e+00 -1.16354950e+00 -2.36453989e-01 -2.36453989e-01
 -2.36453989e-01  8.63908132e+01  6.78590740e+02  3.93630355e+03
  2.96315574e+04  1.54999271e+05  6.71329796e+05  2.87588676e+06]
E1 = -706.5528836678028  E_coul = 198.91333007727457
cycle= 4 E= -507.639553590528  delta_E= -4.04e-11  |g|= 3.73e-07  |ddm|= 3.44e-06
    CPU time for cycle= 4      0.02 sec, wall time      0.02 sec
E1 = -706.5528836678028  E_coul = 198.91333007727457
  HOMO = -0.236453972231694  LUMO = 86.3908135505419
  mo_energy =
[-1.20271153e+02 -1.22542418e+01 -6.65493516e+00 -6.65493516e+00
 -6.65493516e+00 -1.16354949e+00 -2.36453972e-01 -2.36453972e-01
 -2.36453972e-01  8.63908136e+01  6.78590741e+02  3.93630355e+03
  2.96315574e+04  1.54999271e+05  6.71329796e+05  2.87588676e+06]
E1 = -706.5528837047763  E_coul = 198.91333011424808
Extra cycle  E= -507.639553590528  delta_E= 5.68e-14  |g|= 6.44e-09  |ddm|= 1.64e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.10 sec
exp = [1.17471780e+06 2.93679451e+05 7.34198654e+04 1.83539276e+04
 2.23414241e+03 4.56889050e+02 1.21733173e+02 3.75930612e+01
 4.74127226e+00 3.91203585e-01 8.59862972e+00 4.90848683e-01]
E = -507.6395535905282
E = -507.6395535905282
exp = [1.1747178033543271e+06,2.9367945083858178e+05,7.3419865393677101e+04,1.8353927627435987e+04,2.2341424145819028e+03,4.5688904996449571e+02,1.2173317272260677e+02,3.7593061247508530e+01,4.7412722556720146e+00,3.9120358491841306e-01,8.5986297237246045e+00,4.9084868336327880e-01]
